{"files":[{"id":"964fea4a-01fa-41d5-9165-509849f4b1b2","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Asia/Singapore\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"73ec0345-ac85-44ce-8319-d64025fefab8","name":"Code","type":"server_js","source":"const API_KEY \u003d \u0027ad4750d7b78021310b7e581727472dfe\u0027\n\n\n\nfunction getWeatherForecast() {\n  const location \u003d \u0027London\u0027; // Replace with your location\n  const apiUrl \u003d `https://api.openweathermap.org/data/2.5/forecast?q\u003d${location}\u0026appid\u003d${API_KEY}\u0026units\u003dmetric`;\n\n  const response \u003d UrlFetchApp.fetch(apiUrl);\n  const weatherData \u003d JSON.parse(response.getContentText());\n  // Logger.log(`response: ${response}`)\n  Logger.log(`weatherData: ${JSON.stringify(weatherData, null, 2)}`)\n  const today \u003d new Date();\n  // const startOfToday \u003d new Date(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate());\n  // const endOfToday \u003d new Date(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate() + 1);\n\n  const startOfToday \u003d new Date(today.getFullYear(), today.getMonth(), today.getDate());\n  const endOfToday \u003d new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\n  Logger.log(`startOfToday: ${startOfToday}`)\n  Logger.log(`endOfToday: ${endOfToday}`)\n  let isRaining \u003d false;\n\n\n  // go through all records of current day weather data to check if any record indicates rain\n  /* example of a rain json weather data:\n    \"weather\": [\n    {\n      \"id\": 500,\n      \"main\": \"Rain\",\n      \"description\": \"light rain\",\n      \"icon\": \"10d\"\n    }\n  */\n  Logger.log(`weatherData.list.length: ${weatherData.list.length}`)\n\n  weatherData.list.forEach((entry) \u003d\u003e {\n    const entryDate \u003d new Date(entry.dt * 1000);\n    if (startOfToday \u003c\u003d entryDate \u0026\u0026 entryDate \u003c endOfToday) {\n      Logger.log(`entry.weather[0].main.toLowerCase(): ${entry.weather[0].main.toLowerCase()}`)\n      if (entry.weather[0].main.toLowerCase().includes(\u0027rain\u0027)) {\n        isRaining \u003d true;\n      }\n    }\n  });\n\n  updateCalendarEvent(isRaining, startOfToday);\n}\n\nfunction updateCalendarEvent(isRaining, date) {\n  const title \u003d \u0027Rain Alert\u0027\n  const calendar \u003d CalendarApp.getDefaultCalendar();\n  const events \u003d calendar.getEventsForDay(date);\n\n  // Check if there is already an event for rain\n  const rainEvents \u003d events.filter((event) \u003d\u003e event.getTitle() \u003d\u003d\u003d title);\n\n  // create rain event or not\n  if (rainEvents.length \u003e 0 \u0026 isRaining) {\n    Logger.log(`Existing Rain Events Found: ${rainEvents.length}`);\n  } \n  else if (rainEvents.length \u003d\u003d 0 \u0026 isRaining){\n    const rain_event \u003d calendar.createAllDayEvent(title, date);\n    Logger.log(`Created New Rain Event: ${rain_event}`);\n  }\n  else {\n    Logger.log(\u0027No rain events found\u0027);\n  }\n\n}\n"},{"id":"62031db4-0276-4998-b1f4-828c89a812bd","name":"Utility","type":"server_js","source":"// Function to get start of today in UTC\nfunction getStartOfTodayUTC() {\n  const today \u003d new Date();\n  const utcYear \u003d today.getUTCFullYear();\n  const utcMonth \u003d today.getUTCMonth();\n  const utcDate \u003d today.getUTCDate();\n  \n  return new Date(Date.UTC(utcYear, utcMonth, utcDate));\n}\n\n// Function to convert a UTC date to a local date considering timezone offset\nfunction convertUTCToLocalDate(utcDate, offsetHours) {\n  const localDate \u003d new Date(utcDate);\n  localDate.setHours(localDate.getHours() + offsetHours);\n  return localDate;\n}\n\n// Function to get start of today in a specific timezone\nfunction getStartOfTodayInTimeZone(offsetHours) {\n  const utcStart \u003d getStartOfTodayUTC();\n  return convertUTCToLocalDate(utcStart, offsetHours);\n}\n"}]}